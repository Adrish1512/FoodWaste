{"ast":null,"code":"import _objectSpread from\"C:/Users/proba/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';const API_URL='http://localhost:5000/api';// Create axios instance with default config\nconst api=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Add token to requests if it exists\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});// Auth services\nexport const authService={login:async(email,password)=>{// Simulate frontend-only login\nif(!email||!password){throw{response:{data:{message:'Email and password are required'}}};}// For demo, treat any email/password as valid\nlet user={email,role:email.includes('ngo')?'ngo':'restaurant',name:'Demo User'};const token='mock-token';localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));return{token,user};},register:async userData=>{// Simulate frontend-only registration\nif(!userData.email||!userData.password){throw{response:{data:{message:'Email and password are required'}}};}let user=_objectSpread(_objectSpread({},userData),{},{role:userData.role||'restaurant',name:userData.name||'Demo User'});const token='mock-token';localStorage.setItem('token',token);localStorage.setItem('user',JSON.stringify(user));return{token,user};},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('user');},getCurrentUser:()=>{const user=localStorage.getItem('user');return user?JSON.parse(user):null;}};// Donation services\nexport const donationService={getAllDonations:async()=>{const response=await api.get('/donations');return response.data;},getDonationById:async id=>{const response=await api.get(\"/donations/\".concat(id));return response.data;},createDonation:async donationData=>{const response=await api.post('/donations',donationData);return response.data;},updateDonation:async(id,updateData)=>{const response=await api.patch(\"/donations/\".concat(id),updateData);return response.data;}};// Profile services\nexport const profileService={getProfile:async()=>{const response=await api.get('/profile');return response.data;},updateProfile:async profileData=>{const response=await api.patch('/profile',profileData);return response.data;}};// Contact services\nexport const contactService={sendContact:async contactData=>{const response=await api.post('/contact',contactData);return response.data;}};export default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","authService","login","email","password","response","data","message","user","role","includes","name","setItem","JSON","stringify","register","userData","_objectSpread","logout","removeItem","getCurrentUser","parse","donationService","getAllDonations","get","getDonationById","id","createDonation","donationData","post","updateDonation","updateData","patch","profileService","getProfile","updateProfile","profileData","contactService","sendContact","contactData"],"sources":["C:/Users/proba/OneDrive/Desktop/foodWasteManagement/zerowaste-connect/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if it exists\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Auth services\r\nexport const authService = {\r\n  login: async (email, password) => {\r\n    // Simulate frontend-only login\r\n    if (!email || !password) {\r\n      throw { response: { data: { message: 'Email and password are required' } } };\r\n    }\r\n    // For demo, treat any email/password as valid\r\n    let user = { email, role: email.includes('ngo') ? 'ngo' : 'restaurant', name: 'Demo User' };\r\n    const token = 'mock-token';\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return { token, user };\r\n  },\r\n\r\n  register: async (userData) => {\r\n    // Simulate frontend-only registration\r\n    if (!userData.email || !userData.password) {\r\n      throw { response: { data: { message: 'Email and password are required' } } };\r\n    }\r\n    let user = { ...userData, role: userData.role || 'restaurant', name: userData.name || 'Demo User' };\r\n    const token = 'mock-token';\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    return { token, user };\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n};\r\n\r\n// Donation services\r\nexport const donationService = {\r\n  getAllDonations: async () => {\r\n    const response = await api.get('/donations');\r\n    return response.data;\r\n  },\r\n\r\n  getDonationById: async (id) => {\r\n    const response = await api.get(`/donations/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createDonation: async (donationData) => {\r\n    const response = await api.post('/donations', donationData);\r\n    return response.data;\r\n  },\r\n\r\n  updateDonation: async (id, updateData) => {\r\n    const response = await api.patch(`/donations/${id}`, updateData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Profile services\r\nexport const profileService = {\r\n  getProfile: async () => {\r\n    const response = await api.get('/profile');\r\n    return response.data;\r\n  },\r\n\r\n  updateProfile: async (profileData) => {\r\n    const response = await api.patch('/profile', profileData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Contact services\r\nexport const contactService = {\r\n  sendContact: async (contactData) => {\r\n    const response = await api.post('/contact', contactData);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}